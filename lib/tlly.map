{"version":3,"sources":["args/checks.ts","args/config.ts","args/utils.ts","args/index.ts","commands/utils.ts","enums/error-message.ts","queries/utils.ts","queries/count.ts","queries/seinfeld-count.ts","queries/timestamp.ts","config.ts","constants.ts","queries/index.ts","enums/db.ts","storage/storage.ts","storage/delete.ts","storage/index.ts","commands/commands.ts","commands/index.ts","demo.ts","tlly.ts"],"names":[],"mappings":"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","file":"tlly.map","sourceRoot":"../src","sourcesContent":["import { IFlags } from '../interfaces/args'\n\nexport const hasNoFlagsSet = (flags: IFlags) => {\n  return Object.keys(flags).every((key) => flags[key] === false)\n}\n\nexport const userWantsToTally = (flags: IFlags) => hasNoFlagsSet(flags)\n\nexport const userWantsToCount = (flags: IFlags) => flags.count\n\nexport const userWantsMockTallies = (flags: IFlags) => flags.demo\n\nexport const userWantsToSeinfeldCount = (flags: IFlags) => flags.seinfeldCount\n\nexport const userWantsToSeeTimestampList = (flags: IFlags) => flags.timestamp\n\nexport const userWantsToDeleteATally = (flags: IFlags) => flags.delete\n","export const getHelp = () => `Usage\n\nTo update a tally:\n$ tlly <tally name> <amount> \n\nThe default amount is 1\n\nIf you omit both tally name and amount, 1 will be added \nto the most recent tally name.\n\nYou can add negative amounts\n\nTo display tally counts:\n$ tlly -c <tally name>\n\nIf you omit the tally name, all tally counts will be displayed\n\nTo display tallies that have been updated every day:\n$ tlly -s <tally name>\n\nTo display tallies by timestamp:\n$ tlly -t <tally name>\n\nTo delete a tally:\n$ tlly --delete tally_name\n\nTo force a specific date[1]\n$ tlly exercise 10 2018-06-31\n\n[1]ISO 8601 format\n`\nexport const getConfig = () => ({\n  flags: {\n    count: {\n      type: 'boolean',\n      alias: 'c'\n    },\n    delete: {\n      type: 'boolean'\n    },\n    demo: {\n      type: 'boolean'\n    },\n    seinfeldCount: {\n      type: 'boolean',\n      alias: 's'\n    },\n    timestamp: {\n      type: 'boolean',\n      alias: 't'\n    }\n  }\n})\n","import { IArgs } from '../interfaces/args'\n\nexport const getInputValues = (args: IArgs) => {\n  const [tallyName, amount, timeStamp] = args.input\n  return {\n    tallyName,\n    amount,\n    timeStamp\n  }\n}\n","import * as checks from './checks'\nimport * as config from './config'\nimport * as utils from './utils'\n\nexport const userWantsToCount = checks.userWantsToCount\nexport const userWantsToTally = checks.userWantsToTally\nexport const userWantsMockTallies = checks.userWantsMockTallies\nexport const userWantsToSeinfeldCount = checks.userWantsToSeinfeldCount\nexport const userWantsToSeeTimestampList = checks.userWantsToSeeTimestampList\nexport const userWantsToDeleteATally = checks.userWantsToDeleteATally\nexport const getInputValues = utils.getInputValues\nexport const getConfig = config.getConfig\nexport const getHelp = config.getHelp\n","export const displayCount = (count: Function) => async (tallyName: string) => {\n  const result = await count(tallyName)\n  console.log(result)\n}\n","export enum ErrorMessage {\n  noCurrentTally = 'No current tally. Please specify a name.',\n  noTalliesFound = 'No tallies found.'\n}\n","import { IDB } from '../interfaces/db'\nimport { ITallies, ITally } from '../interfaces/tallies'\n\nexport const getTalliesResponseValue = (\n  db: IDB,\n  tally?: string\n): object | any[] | undefined => {\n  return tally ? db.get(`tallies.${tally}`).value() : db.get('tallies').value()\n}\n\nexport const normalizeTallies = (\n  talliesResponseValue: ITallies | ITally[],\n  tally?: string\n): ITallies => {\n  return Array.isArray(talliesResponseValue)\n    ? { [tally]: talliesResponseValue }\n    : talliesResponseValue\n}\n","import { IDB } from '../interfaces/db'\nimport { ErrorMessage } from '../enums/error-message'\nimport { ITallies, ITally } from '../interfaces/tallies'\nimport { getTalliesResponseValue, normalizeTallies } from './utils'\n\nexport const tallyReducer = (result: number, tally: ITally) => {\n  return (result += tally.amount)\n}\n\nexport const talliesReducer = (tallies: ITallies) => (\n  counts: string[],\n  tallyName: string\n): string[] => {\n  const listOfTallies = tallies[tallyName]\n  const total = listOfTallies.reduce(tallyReducer, 0)\n  counts.push(`${tallyName}: ${total}`)\n  return counts\n}\n\nexport const getTotal = (tallies: ITallies) => {\n  const totals = Object.keys(tallies).reduce(talliesReducer(tallies), [])\n  return totals.join('\\n')\n}\n\nexport const count = (db: IDB) => (tally?: string): string => {\n  const talliesResponseValue:\n    | ITallies\n    | ITally[]\n    | {} = getTalliesResponseValue(db, tally)\n\n  if (!talliesResponseValue) {\n    throw new Error(ErrorMessage.noTalliesFound)\n  }\n  const tallies = normalizeTallies(talliesResponseValue, tally)\n  return getTotal(tallies)\n}\n\nexport const countFactory = (db: IDB) => {\n  return count(db)\n}\n","import { IDB } from '../interfaces/db'\nimport { ErrorMessage } from '../enums/error-message'\nimport { IContigiousTallies, IContigiousTally } from '../interfaces/tallies'\nimport { differenceInCalendarDays } from 'date-fns'\n\nexport const talliesReducer = (contiguousTallies: IContigiousTallies) => (\n  counts: string[],\n  tallyName: string\n): string[] => {\n  const record = contiguousTallies[tallyName]\n  const dateDiff = differenceInCalendarDays(new Date(), new Date(record.last))\n  counts.push(`${tallyName}: ${dateDiff > 1 ? 0 : record.count}`)\n  return counts\n}\n\nexport const getTotal = (contiguousTallies: IContigiousTallies) => {\n  const totals = Object.keys(contiguousTallies).reduce(\n    talliesReducer(contiguousTallies),\n    []\n  )\n  return totals.join('\\n')\n}\n\nexport const getContiguousResponseValue = (\n  db: IDB,\n  tally?: string\n): object | undefined => {\n  return tally\n    ? db.get(`contiguous.${tally}`).value()\n    : db.get('contiguous').value()\n}\n\nexport const normalizeContiguousTallies = (\n  contiguousTalliesResponseValue: any,\n  tally?: string\n): IContigiousTallies => {\n  return contiguousTalliesResponseValue.count !== undefined &&\n    contiguousTalliesResponseValue.timeStamp! == undefined\n    ? ({ [tally]: contiguousTalliesResponseValue } as IContigiousTallies)\n    : (contiguousTalliesResponseValue as IContigiousTallies)\n}\n\nexport const seinfeldCount = (db: IDB) => (tally?: string): string => {\n  const contiguousResponseValue:\n    | IContigiousTally\n    | IContigiousTallies\n    | {} = getContiguousResponseValue(db, tally)\n\n  if (!contiguousResponseValue) {\n    throw new Error(ErrorMessage.noTalliesFound)\n  }\n  const contiguousTallies = normalizeContiguousTallies(\n    contiguousResponseValue,\n    tally\n  )\n  return getTotal(contiguousTallies)\n}\n\nexport const seinfeldCountFactory = (db: IDB) => {\n  return seinfeldCount(db)\n}\n","import { IDB } from '../interfaces/db'\nimport { ErrorMessage } from '../enums/error-message'\nimport { ITallies, ITally } from '../interfaces/tallies'\nimport { getTalliesResponseValue, normalizeTallies } from './utils'\n\nexport const tallyMap = (tallyName: string) => (tally: ITally) => {\n  return `${tallyName}: ${tally.amount} (${tally.timeStamp})`\n}\n\nexport const talliesReducer = (tallies: ITallies) => (\n  counts: string[],\n  tallyName: string\n): string[] => {\n  const listOfTallies = tallies[tallyName]\n  const records = listOfTallies.map(tallyMap(tallyName)).join('\\n')\n  counts.push(records)\n  return counts\n}\n\nexport const getList = (tallies: ITallies) => {\n  const totals = Object.keys(tallies).reduce(talliesReducer(tallies), [])\n  return totals.join('\\n\\n')\n}\n\nexport const timestamp = (db: IDB) => (tally?: string): string => {\n  const talliesResponseValue:\n    | ITallies\n    | ITally[]\n    | {} = getTalliesResponseValue(db, tally)\n\n  if (!talliesResponseValue) {\n    throw new Error(ErrorMessage.noTalliesFound)\n  }\n  const tallies = normalizeTallies(talliesResponseValue, tally)\n  return getList(tallies)\n}\n\nexport const timestampFactory = (db: IDB) => {\n  return timestamp(db)\n}\n","import * as fs from 'fs'\nimport * as os from 'os'\nimport { join } from 'path'\nimport { IConfig } from './interfaces/config'\n\nconst pkg = require('../package.json')\n\nlet config\n\nconst maybeCreateConfig = (configPath: string, defaultConfig: IConfig) => {\n  if (!fs.existsSync(configPath)) {\n    const data = JSON.stringify(defaultConfig, null, 4)\n    fs.writeFileSync(configPath, data, 'utf8')\n  }\n}\n\nconst readConfig = (configPath: string, defaultConfig: IConfig) => {\n  const content = fs.readFileSync(configPath, 'utf8')\n  const config = JSON.parse(content)\n\n  return { ...defaultConfig, ...config }\n}\n\nconst setConfig = () => {\n  const { default: defaultConfig } = pkg.configuration\n  const configPath = join(os.homedir(), '.tlly-config.json')\n  maybeCreateConfig(configPath, defaultConfig)\n  config = readConfig(configPath, defaultConfig)\n}\n\nsetConfig()\n\nexport const getConfig = (): IConfig => config\n","import * as os from 'os'\nimport { join } from 'path'\nimport { getConfig } from './config'\n\nexport const dbDefault = {\n  currentTally: undefined,\n  tallies: {},\n  contiguous: {}\n}\n\nconst configLocation = getConfig().dbLocation\n\nexport const dbLocation = join(\n  getConfig().dbLocation || os.homedir(),\n  '.tllydb.json'\n)\n","import lowdb = require('lowdb')\nimport FileAsync = require('lowdb/adapters/FileAsync')\nimport FileSync = require('lowdb/adapters/FileSync')\nimport * as os from 'os'\nimport { join } from 'path'\nimport { countFactory } from './count'\nimport { seinfeldCountFactory } from './seinfeld-count'\nimport { timestampFactory } from './timestamp'\nimport { dbDefault, dbLocation } from '../constants'\n\nexport const count = async (...args) => {\n  // While I'm generally using sync, there's a bug in lowdb which makes\n  // this break when unless it's async. Specifically it breaks if\n  // count happens immediately after an update. The update isn't\n  // included in the count.\n  // See https://github.com/typicode/lowdb/issues/283\n  const adapter = new FileAsync(dbLocation)\n  const db = await lowdb(adapter)\n  db.defaults(dbDefault)\n  return countFactory(db).apply(null, args)\n}\n\nexport const seinfeldCount = (...args) => {\n  const adapter = new FileSync(dbLocation)\n  const db = lowdb(adapter)\n  db.defaults(dbDefault)\n  return seinfeldCountFactory(db).apply(null, args)\n}\n\nexport const timestamp = (...args) => {\n  const adapter = new FileSync(dbLocation)\n  const db = lowdb(adapter)\n  db.defaults(dbDefault)\n  return timestampFactory(db).apply(null, args)\n}\n","export enum DB {\n  currentTally = 'currentTally'\n}\n","import { DB } from '../enums/db'\nimport { ErrorMessage } from '../enums/error-message'\nimport { IDB } from '../interfaces/db'\nimport { differenceInCalendarDays } from 'date-fns'\n\nexport const getResolvedTally = (\n  db: IDB,\n  tally: string | undefined\n): string => {\n  const resolvedTally = tally || db.get(DB.currentTally).value()\n  if (resolvedTally) {\n    return resolvedTally\n  }\n  throw new Error(ErrorMessage.noCurrentTally)\n}\n\nexport const maybeStartNewTally = (\n  tallyResults: object,\n  db: IDB,\n  tallyName: string\n) => {\n  if (!tallyResults) {\n    db.set(`tallies.${tallyName}`, []).write()\n    db.set(`contiguous.${tallyName}`, { count: 0, last: '' }).write()\n  }\n}\n\nexport const writeContiguousUpdateToDb = (\n  db: IDB,\n  tallyName: string,\n  amount: number,\n  timeStamp: string\n) => {\n  const dateTime = timeStamp ? new Date(timeStamp) : new Date()\n  const newLast = dateTime.toUTCString()\n  const contiguous = db.get(`contiguous.${tallyName}`).value()\n  const { count, last } = contiguous\n  const lastDate = new Date(last)\n  const newCount =\n    !last || differenceInCalendarDays(new Date(dateTime), lastDate) > 1\n      ? 1\n      : count + amount\n  db.set(`contiguous.${tallyName}`, { count: newCount, last: newLast }).write()\n}\n\nexport const writeUpdatedTallyToDb = (\n  db: IDB,\n  tallyName: string,\n  amount: number,\n  timeStamp?: string\n) => {\n  const dateTime = timeStamp ? new Date(timeStamp) : new Date()\n  db.get(`tallies.${tallyName}`)\n    .push({ amount, timeStamp: dateTime.toUTCString() })\n    .write()\n}\n\nexport const updateCurrentTally = (db: IDB, resolvedTally: string) => {\n  db.set(DB.currentTally, resolvedTally).write()\n}\n\nexport const updateTally = (\n  db: IDB,\n  amount: number,\n  tally?: string,\n  timeStamp?: string\n) => {\n  const resolvedTally = getResolvedTally(db, tally)\n  const tallyResults = db.get(`tallies.${resolvedTally}`).value()\n  maybeStartNewTally(tallyResults, db, resolvedTally)\n  writeUpdatedTallyToDb(db, resolvedTally, amount, timeStamp)\n  writeContiguousUpdateToDb(db, resolvedTally, amount, timeStamp)\n  updateCurrentTally(db, resolvedTally)\n\n  return resolvedTally\n}\n\nexport const updateTallyFactory = (db: IDB) => (\n  amount: number = 1,\n  tally?: string,\n  timeStamp?: string\n) => {\n  return updateTally(db, amount, tally, timeStamp)\n}\n","import { IDB } from '../interfaces/db'\n\nexport const deleteTally = (db: IDB, tallyName: string) => {\n  db.unset(`tallies.${tallyName}`).write()\n  db.unset(`contiguous.${tallyName}`).write()\n}\n\nexport const deleteTallyFactory = (db: IDB) => (tallyName: string) => {\n  deleteTally(db, tallyName)\n}\n","import lowdb = require('lowdb')\nimport FileSync = require('lowdb/adapters/FileSync')\nimport * as os from 'os'\nimport { join } from 'path'\nimport { updateTallyFactory } from './storage'\nimport { deleteTallyFactory } from './delete'\nimport { dbDefault, dbLocation } from '../constants'\n\nconst adapter = new FileSync(dbLocation)\nconst db = lowdb(adapter)\ndb.defaults(dbDefault)\n\nexport const updateTally = (...args) => {\n  return updateTallyFactory(db).apply(null, args)\n}\n\nexport const deleteTally = (...args) => {\n  return deleteTallyFactory(db).apply(null, args)\n}\n","export const doTally = (displayCount: Function, updateTally: Function) => (\n  amount?: any,\n  tallyName?: string,\n  timeStamp?: string\n) => {\n  const resolvedTallyName = updateTally(\n    amount && !isNaN(Number(amount)) ? Number(amount) : undefined,\n    tallyName,\n    timeStamp\n  )\n\n  displayCount(resolvedTallyName)\n}\n\nexport const doCount = (displayCount: Function) => (tallyName?: string) => {\n  displayCount(tallyName)\n}\n\nexport const doSeinfeldCount = (seinfeldCount: Function) => (\n  tallyName?: string\n) => {\n  const count = seinfeldCount(tallyName)\n  console.log(count)\n}\n\nexport const doTimestamp = (timestamp: Function) => (tallyName?: string) => {\n  const count = timestamp(tallyName)\n  console.log(count)\n}\n\nexport const doDeleteTally = (deleteTally: Function) => (tallyName: string) => {\n  deleteTally(tallyName)\n}\n","import { displayCount as displayCountFactory } from './utils'\nimport { count, seinfeldCount, timestamp } from '../queries'\nimport { updateTally, deleteTally } from '../storage'\nimport * as commands from './commands'\n\nexport const displayCount = displayCountFactory(count)\nexport const doCount = commands.doCount(displayCount)\nexport const doTally = commands.doTally(displayCount, updateTally)\nexport const doSeinfeldCount = commands.doSeinfeldCount(seinfeldCount)\nexport const doTimestamp = commands.doTimestamp(timestamp)\nexport const doDeleteTally = commands.doDeleteTally(deleteTally)\n","import { subDays } from 'date-fns'\nimport { range } from 'lodash'\nimport { doTally } from './commands/'\nimport { updateTally } from './storage'\n\nconst getLastNDaysAsStrings = (\n  n: number,\n  gap: number = 0,\n  date: Date = new Date()\n): string[] => {\n  return range(1 + gap, n + gap)\n    .reverse()\n    .map((offset: number) => {\n      return subDays(date, offset).toISOString()\n    })\n}\n\nconst addTally = (name: string, dates: string[]) => {\n  dates.forEach((date) => {\n    updateTally(1, name, date)\n  })\n  console.log(`Added tally ${name}`)\n}\n\nexport const addMockTallies = () => {\n  addTally('_exercise', getLastNDaysAsStrings(10))\n  addTally('_meditation', getLastNDaysAsStrings(10, 2))\n}\n","import meow = require('meow')\nimport { getHelp, getConfig as getArgsConfig } from './args'\nimport {\n  getInputValues,\n  userWantsToCount,\n  userWantsToTally,\n  userWantsMockTallies,\n  userWantsToSeinfeldCount,\n  userWantsToSeeTimestampList,\n  userWantsToDeleteATally\n} from './args'\nimport { IArgs, IFlags } from './interfaces/args'\nimport {\n  doCount,\n  doTally,\n  doSeinfeldCount,\n  doTimestamp,\n  doDeleteTally\n} from './commands'\nimport { addMockTallies } from './demo'\n\nconst start = () => {\n  const moewResult: any = meow(getHelp(), getArgsConfig() as meow.Options)\n  const flags: IFlags = moewResult.flags\n  const args: IArgs = { input: moewResult.input, flags }\n  const { tallyName, amount, timeStamp } = getInputValues(args)\n\n  try {\n    if (userWantsToTally(flags)) {\n      doTally(amount, tallyName, timeStamp)\n    } else if (userWantsToCount(flags)) {\n      doCount(tallyName)\n    } else if (userWantsToSeinfeldCount(flags)) {\n      doSeinfeldCount(tallyName)\n    } else if (userWantsToSeeTimestampList(flags)) {\n      doTimestamp(tallyName)\n    } else if (userWantsToDeleteATally(flags)) {\n      doDeleteTally(tallyName)\n    } else if (userWantsMockTallies(flags)) {\n      addMockTallies()\n    }\n  } catch (e) {\n    console.log(e.message)\n  }\n}\n\nmodule.exports = start\n"]}